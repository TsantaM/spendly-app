generator client {
  // provider = "prisma-client"
  provider = "prisma-client-js"
  // previewFeatures = ["prismaSchemaFolder"]
  output   = "../src/generate/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Spending {
  id        String   @id @default(uuid())
  UserId    String
  motif     String
  montant   Float
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  user      user     @relation(fields: [UserId], references: [id])
}

model Incomes {
  id        String   @id @default(uuid())
  UserId    String
  motif     String
  montant   Float
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  user      user     @relation(fields: [UserId], references: [id])
}

model account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  user      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model user {
  id              String     @id
  name            String
  email           String     @unique
  emailVerified   Boolean
  image           String?
  createdAt       DateTime
  updatedAt       DateTime
  username        String?    @unique
  displayUsername String?
  Spending        Spending[]
  Incomes         Incomes[]
  account         account[]
  session         session[]
}

model verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?
}
